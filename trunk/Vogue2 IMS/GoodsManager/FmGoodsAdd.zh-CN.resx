<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="DevExpress.Utils.v11.1" name="DevExpress.Utils.v11.1, Version=11.1.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageS16.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v11.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxMS4xLCBWZXJzaW9uPTExLjEu
        NC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAAGUKAAACfQMAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAAFzUkdCAK7OHOkA
        AAAEZ0FNQQAAsY8L/GEFAAADJ0lEQVQ4T7VSXUiTYRT+iOgiUWi6ocGybFqzsnRldSMZLQox+zN1Tp3T
        uZw6XW7flttsc26upaYzZ1PLP+yHfrSiIMgugi4iapR+EnkTWUraLiodDS+e3n0YdFVXHTi8L+ec55z3
        ec5L/TebnJxcFQwGD8zPfUlbDv3bZmZmVgeDP48u+GeGFuY++Mdfv8CDkTuz9+7eHXn65EnP61ev7F/n
        52uWlpakgUBgzzKMohYXfhxa9H8eCXydXlycfY/A7Dt8+/gWvZ4OHDt8CAfT0pApFiM3Kws3+vvhbm7G
        /dHRMRZcoW1WDw5d93//xOD79ATmJsYw/fwWng3YYdZpsCtRiPU8Hjav40MkFMJhNsNpscDe6PxWRbeq
        qDyZlkk/kIF7/Z3odRhhVRVBlXMU2eJ0lCsrId4nRvLWFIiSRBBt34mifBlUyipI8oshlet9VJW2jdGZ
        PLA6B+Fqvw139yN4B8fQ1vMIhobL0Fu70Op9CPeVx3B1jKKx5SaMtj7oTF1Q024fZbR4mA7PIEy2q3C0
        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
</value>
  </data>
</root>